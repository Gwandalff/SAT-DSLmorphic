grammar org.xtext.example.mydsl1.MSat with org.eclipse.xtext.common.Terminals

generate mSat "http://www.xtext.org/example/mydsl1/MSat"

SATMorphic:
	'solver' solvers+=SATSolver+ 
	benchmark=Benchmark
;


SATSolver : solver=(Sat4J | CryptoMiniSAT | MiniSAT) (version=STRING)?;

Sat4J:  variant=Sat4JVariant;
enum Sat4JVariant:	SAT4J_JAVA="sat4j-java" | SAT4J_JAR="sat4j-jar" | SAT4J_COMP="sat4j-maven" ;

MiniSAT: variant="minisat" ;
CryptoMiniSAT: variant="cryptominisat" ;

Benchmark: BenchmarkDimacs | BenchmarkFormula;

BenchmarkDimacs : 'benchmark-DIMACS' (dimacses+=STRING ("," dimacses+=STRING)*);
BenchmarkFormula : 'benchmark-formula'	(expressions+=BiImpl ("," expressions+=BiImpl)*); 

BiImpl returns Expression:
	Impl ( {BiImpl.left=current} '<=>' right=Impl)*
;

Impl returns Expression:
	Or ({Impl.left=current} '=>' right=Or)*
;

Or returns Expression:
	And ({Or.left=current} 'v' right=And)*
;

And returns Expression:
	Nand ({And.left=current} '^' right=Nand)*	
;

Nand returns Expression:
	Primary ({Nand.left=current} ('|'|'â†‘') right=Primary)*
;

Primary returns Expression:
	'(' BiImpl ')' |
	Not |
	Const |
	Var 	
;

Not returns Expression:
	('!'|'~') Primary {Not.expression=current}
;

Var returns Expression:
	id=ID
;

Const returns Expression:
	val=("true"|"false")
;



